steps:
  - task: NodeTool@0
    displayName: 'Use Node.js 18.x'
    inputs:
      versionSpec: '18.x'

  - task: Npm@1
    displayName: 'Install Dependencies'
    inputs:
      command: 'ci'
      workingDir: '$(System.DefaultWorkingDirectory)'
      verbose: false
  
  - task: SonarQubePrepare@5
    displayName: 'Prepare SonarQube Analysis'
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: '$(Build.Repository.Name)'
      cliProjectName: '$(Build.Repository.Name)'
      cliProjectVersion: '$(Build.BuildNumber)'
      cliSources: '$(System.DefaultWorkingDirectory)/src'
      extraProperties: |
        sonar.projectBaseDir=$(System.DefaultWorkingDirectory)
        sonar.exclusions=node_modules/**,coverage/**,examples/**,docs/**,reports/**
        sonar.sources=$(System.DefaultWorkingDirectory)/src
        sonar.sourceEncoding=UTF-8   
        sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/lcov.info
        sonar.testExecutionReportPaths=$(System.DefaultWorkingDirectory)/coverage/sonar-report.xml
        sonar.coverage.exclusions=test/**,*.test.js,**/*.test.js
        sonar.language=js

  - task: Npm@1
    displayName: 'Run Tests and Generate Coverage'
    inputs:
      command: 'custom'
      customCommand: 'run test'
      workingDir: '$(System.DefaultWorkingDirectory)'

  - task: PublishCodeCoverageResults@2
    displayName: 'Publish Code Coverage Results'
    inputs:
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
      pathToSources: '$(System.DefaultWorkingDirectory)/src'
      failIfCoverageEmpty: false

  - task: SonarQubeAnalyze@5
    displayName: 'Run SonarQube Code Analysis'

  - task: SonarQubePublish@5
    displayName: 'Publish SonarQube Quality Gate Result'
    inputs:
      pollingTimeoutSec: '300'

  - task: Npm@1
    displayName: 'Build'
    inputs:
      command: custom
      workingDir: '$(System.DefaultWorkingDirectory)'
      verbose: false
      customCommand: run build
