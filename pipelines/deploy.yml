steps:
  - task: CopyFiles@2
    displayName: 'Copy application files'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: |
        src/**
        package.json
        package-lock.json
        index.js
      TargetFolder: '$(Build.ArtifactStagingDirectory)/app'
      CleanTargetFolder: true

  - task: Npm@1
    displayName: 'Install production dependencies'
    inputs:
      command: 'ci'
      workingDir: '$(Build.ArtifactStagingDirectory)/app'
      customRegistry: 'useNpmrc'

  - task: ArchiveFiles@2
    displayName: 'Create deployment package'
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/app'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Build Artifact'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
      ArtifactName: 'lambda-package'
      publishLocation: 'Container'

  - task: UniversalPackages@0
    displayName: 'Publish to Azure Artifacts'
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: 'your-feed-name'
      vstsFeedPackagePublish: '$(ARTIFACTORY_REPOSITORY)'
      versionOption: 'patch'
